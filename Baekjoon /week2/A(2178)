#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int n, m;
char mat[101][101];
int visited[101][101];
string s;

int dy[] = {-1, 0, 1, 0};
int dx[] = {0, 1, 0, -1};

void bfs(int y, int x) {
	visited[y][x] = 1;
	queue<pair<int, int>> q;
	q.push({y,x});
	while (q.size()) {
		int y = q.front().first;
		int x = q.front().second;
		q.pop();
		for (int i=0; i<4; i++){
			int ny = y + dy[i];
			int nx = x + dx[i];
			
			if (ny < 0 || ny >=n || nx < 0 || nx >= m) {
				continue;
			}
			
			if (visited[ny][nx] == 0 && mat[ny][nx] == '1') {
				visited[ny][nx] = visited[y][x] + 1;
				q.push({ny,nx});
			}

		}

	}
}

int main() {
	
	cin >> n >> m;
	for (int i=0; i<n; i++) {
		cin >> s;
		for (int j=0; j<m; j++) {
			mat[i][j] = s[j];
		}
	}
	
	bfs(0,0);
	
	cout << visited[n-1][m-1] << "\n";
	
	
}	
