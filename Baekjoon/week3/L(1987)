#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int n, m;
char mat[21][21];
int visited[21][21];
int cnt;
int dy[] = {-1,0,1,0};
int dx[] = {0,1,0,-1};
vector<char> v;
int ret = 1;

void dfs(int y, int x) {
	visited[y][x] = 1;

	for (int i=0; i<4; i++) {
		int ny = y + dy[i];
		int nx = x + dx[i];
		int f = 0;
		if (ny < 0 || ny >= n || nx < 0 || nx >= m || visited[ny][nx]) continue;
		for (char c : v) {
			if (c == mat[ny][nx]) {
				f = 1;
				break;
			}
		}
		if (f == 1) continue;
		v.push_back(mat[ny][nx]);
		cnt++;
		ret = max(ret, cnt);
		dfs(ny,nx);
		v.pop_back();
		visited[ny][nx] = 0;
		cnt--;
	}
}



int main() {
	
	cin >> n >> m;
	for (int i=0; i<n; i++) {
		for (int j=0; j<m; j++) {
			cin >> mat[i][j];
		}
	}
	v.push_back(mat[0][0]);
	cnt++;
	dfs(0,0);
	
	cout << ret << "\n";

    return 0;
}
