#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int n, m;
char mat[52][52];
int dy[] = {-1,0,1,0};
int dx[] = {0, 1, 0, -1};
string s;

int ret;


int bfs(int y, int x) {
	int visited[52][52] = {0};
	visited[y][x] = 1;
	queue<pair<int,int>> q;
	q.push({y,x});
	int dis = 0;
	
	while (q.size()) {
		int y = q.front().first;
		int x = q.front().second;
		q.pop();
		for (int i=0; i<4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];
			if (ny < 0 || ny >= n || nx < 0 || nx >= m) continue;
			if (visited[ny][nx] == 0 && mat[ny][nx] == 'L'){
				visited[ny][nx] = visited[y][x] + 1;
				dis = max(dis, visited[ny][nx]);
				q.push({ny, nx});
			}
		}
	}
	
	return dis;
}


int main() {
	
	cin >> n >> m;
	for (int i=0; i<n; i++) {
		for (int j=0; j<m; j++) {
			cin >> mat[i][j];
		}
	}
	
	for (int i=0; i<n; i++) {
		for (int j=0; j<m; j++) {
			if (mat[i][j] == 'L') {
				ret = max(ret, bfs(i,j));
			}
		}
	}
	
	cout << ret - 1 << "\n";

    return 0;
}


