#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int n, m, x1, yyy, x2, y2;
int visited[301][301];
char mat[301][301];
int cnt;
int dy[] = {-1,0,1,0};
int dx[] = {0,1,0,-1};
int f;

int main() {
	
	cin >> n >> m;
	cin >> yyy >> x1;
	cin >> y2 >> x2;
	for (int i=0; i<n; i++) {
		for (int j=0; j<m; j++) {
			cin >> mat[i][j];
		}
	}
	
	while(1) {
		memset(visited,0,sizeof(visited));
		int y = yyy-1;
		int x = x1-1;
		cnt++;
		queue<pair<int,int>> q;
		q.push({y,x});
		visited[y][x] = 1;
		
		while (q.size()) {
			int yy = q.front().first;
			int xx = q.front().second;
			q.pop();
			
			for (int i=0; i<4; i++) {
				int ny = yy + dy[i];
				int nx = xx + dx[i];
				if (ny < 0 || ny >= n || nx < 0 || nx >= m) continue;
				if (visited[ny][nx] == 0 && mat[ny][nx] == '0') {
					q.push({ny,nx});
					visited[ny][nx] = 1;
				}
				else if (visited[ny][nx] == 0 && mat[ny][nx] == '1') {
					mat[ny][nx] = '0';
					visited[ny][nx] = 1;
				}
				if (mat[ny][nx] == '#') {
					f=1;
					break;
				}
			}
			if (f==1) break;
		}
		if (f==1) break;
	}
	
	cout << cnt << "\n";
	
    return 0;
}
