#include<bits/stdc++.h>
using namespace std;

int n, m;
vector<int> adj[10001];
int visited[10001];
int a,b;
vector<int> v;
int cnt;
int maxcnt;

void dfs(int u) {
	visited[u] = 1;
	cnt++;
	for (int v : adj[u]) {
		if (visited[v]) continue;
		dfs(v);
	}
}


int main(){
		ios_base::sync_with_stdio(0); 
	cin.tie(0); 
	

	cin >> n >> m;
	for (int i=0; i<m; i++) {
		cin >> a >> b;
		adj[b].push_back(a);
	}
	
	for (int i=1; i<=n; i++) {
		memset(visited,0,sizeof(visited));
		cnt = 0;
		dfs(i);
		if (cnt > maxcnt) {
			v.clear();
			maxcnt = cnt;
			v.push_back(i);
		}
		else if (cnt == maxcnt) {
			v.push_back(i);
		}

	}
	
	sort(v.begin(), v.end());
	
	for (int i : v) {
		cout << i << " ";
	}
	
    
    return 0;
}
