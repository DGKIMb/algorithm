#include <bits/stdc++.h>
using namespace std;
typedef long long ll;


int n, m, k;
int mat[101][101];
int visited[101][101];
int sy, sx, ey, ex;
int ret;
int cnt;
vector<int> v;


int dy[] = {-1, 0, 1, 0};
int dx[] = {0, 1, 0, -1};

void dfs(int y, int x) {
	visited[y][x] = 1;
	cnt++;
	
	for (int i=0; i<4; i++) {
		int ny = y + dy[i];
		int nx = x + dx[i];
		if (ny < 0 || ny >= n || nx < 0 || nx >= m) {
			continue;
		}
		if (mat[ny][nx] == 0 && visited[ny][nx] == 0) {
			dfs(ny, nx);
		}
		
	}
}

int main() {
	
	cin >> n >> m >> k;
	
	for (int t=0; t<k; t++) {
		cin >> sx >> sy >> ex >> ey;
		
		for (int i=sy; i<ey; i++) {
			for (int j=sx; j<ex; j++) {
				mat[i][j] = 1;
			}
		}
	}
	
	for (int i=0; i<n; i++) {
		for (int j=0; j<m; j++) {
			if (visited[i][j] == 0 && mat[i][j] == 0) {
				dfs(i,j);
				ret++;
				v.push_back(cnt);
				cnt = 0;
			}
		}
	}
	
	cout << ret << "\n";
	sort(v.begin(), v.end());
	for (int i : v) {
		cout << i << " ";
	}
	
	cout << "\n";
	

	
	return 0;
}	
