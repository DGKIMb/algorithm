#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int t;
int n, m, k;
int mat[51][51];
int visited[51][51];
string s;
int x, y;
int ret;

int dy[] = {-1, 0, 1, 0};
int dx[] = {0, 1, 0, -1};

void dfs(int y, int x) {
	visited[y][x] = 1;
	
	for (int i=0; i<4; i++) {
		int ny = y + dy[i];
		int nx = x + dx[i];
		if (ny < 0 || ny >= n || nx < 0 || nx >= m) {
			continue;
		}
		if (mat[ny][nx] == 1 && visited[ny][nx] == 0) {
			dfs(ny, nx);
		}
		
	}
}

int main() {
	
	cin >> t;
	for (int l=0; l<t; l++) {
		
		cin >> m >> n >> k;
		for (int i=0; i<k; i++) {
			cin >> x >> y;
			mat[y][x] = 1;
		}
		
		for (int i=0; i<n; i++) {
			for (int j=0; j<m; j++) {
				if (mat[i][j] == 1 && visited[i][j] == 0) {
					dfs(i,j);
					ret++;
				}
			}
		}
		cout << ret << "\n";
		
		memset(visited, 0, sizeof(visited));
		memset(mat, 0, sizeof(mat));
		ret = 0;
		
	}
	
	return 0;
}	
