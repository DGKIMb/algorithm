#include<bits/stdc++.h>
using namespace std;   
typedef long long ll;

int n, m;
char mat[21][21];
int dy[] = {-1,0,1,0};
int dx[] = {0,1,0,-1};
int cnt, ret;

void dfs(int y, int x, int num, int cnt) {
	ret = max(cnt, ret);
	
	for (int i=0; i<4; i++) {
		int ny = y + dy[i];
		int nx = x + dx[i];
		if (ny < 0 || ny >= n || nx < 0 || nx >=m) continue;
		if ((num & (1 << (int)(mat[ny][nx] - 'A'))) == 0) {
			dfs(ny,nx,num | (1 << (int)(mat[ny][nx] - 'A')), cnt+1);
		}
	}
}


int main(){

	cin >> n >> m;
	for (int i=0; i<n; i++) {
		for (int j=0; j<m; j++) {
			cin >> mat[i][j];
		}
	}
	
	dfs(0,0, (1 << (int)(mat[0][0]-'A')), 1);
	cout << ret;

    return 0;
}
